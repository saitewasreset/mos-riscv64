#ifndef __DRIVER_SERIAL_REGS
#define __DRIVER_SERIAL_REGS

// clang-format off
// Receiver Buffer Register/Transmitter Holding Register/Divisor Latch LSB
#define RBR_THR_DLL_OFFSET 0x00

// Interrupt Enable Register/Divisor Latch MSB
/*
 * 中断使能寄存器（IER）
 *
 * +-------+--------------+-------+--------+----------------------------------+
 * | 位域  | 位域名称     | 位宽  | 访问   | 描述                             |
 * +-------+--------------+-------+--------+----------------------------------+
 * | 7:4   | Reserved     | 4     | 读/写  | 保留                             |
 * | 3     | EDSSI        | 1     | 读/写  | Modem 状态改变中断使能            |
 * | 2     | ELSI         | 1     | 读/写  | 接收器线路状态改变中断使能        |
 * | 1     | ETBEI        | 1     | 读/写  | 发送保存寄存器为空中断使能        |
 * | 0     | ERBFI        | 1     | 读/写  | 接收有效数据中断使能              |
 * +-------+--------------+-------+--------+----------------------------------+
 */
#define IER_DLM_OFFSET 0x01

#define IER_ERBFI 0x1
#define IER_ETBEI 0x2
#define IER_ELSI 0x4
#define IER_EDSSI 0x8
#define IER_ALL 0xF

// Interrupt Identification Register/FIFO Control Register
/*
 * 中断标识寄存器（IIR）
 *
 * +-------+--------------+-------+--------+----------------------------------+
 * | 位域  | 位域名称     | 位宽  | 访问   | 描述                             |
 * +-------+--------------+-------+--------+----------------------------------+
 * | 7:6   | FEFLAG       | 2     | 读     | 00:未启用 FIFO, 11:已启用 FIFO,  |
 * |       |              |       |        | 01: FIFO 不可用                 |
 * | 5:4   | Reserved     | 2     | 读     | 保留                            |
 * | 3:1   | IID          | 3     | 读     | 中断源表示位，详见下表          |
 * | 0     | INTp         | 1     | 读     | 中断待处理位，0 表示有中断待处理 |
 * +-------+--------------+-------+--------+----------------------------------+
 */

/*
 * 中断源表示位及其详细信息：
 * 
 * +--------+------------+--------------------------------------+-----------------------------+------------------------+------------------------------+
 * | 中断源 | 优先级     | 中断类型                             | 中断源                      | 清除中断方法           | 需开启的 IER 中断            |
 * | 表示位 | (1为最高)  |                                      |                             |                        |                              |
 * +--------+------------+--------------------------------------+-----------------------------+------------------------+------------------------------+
 * | 011    | 1          | 接收线路状态改变                     | 线路状态改变                | 读 LSR                 | 接收器线路状态中断使能       |
 * |        |            | (Receiver line status interrupt)     | （奇偶、溢出或帧错误，      |                        | (ELSI)                       |
 * |        |            |                                      | 或打断中断）                |                        |                              |
 * +--------+------------+--------------------------------------+-----------------------------+------------------------+------------------------------+
 * | 010    | 2          | 接收到有效数据                       | 接收 FIFO 字符个数达到      | 接收 FIFO 的字符个数    | 接收有效数据中断使能         |
 * |        |            | (Receiver data interrupt)            | 触发阈值                    | 低于触发阈值           | (ERBFI)                      |
 * +--------+------------+--------------------------------------+-----------------------------+------------------------+------------------------------+
 * | 110    | 2          | 接收超时                             | 在 FIFO 至少有一个字符，    | 读接收 FIFO            | 接收有效数据中断使能         |
 * |        |            | (Character Timeout Indication)       | 但在 4 个字符时间内没有     |                        | (ERBFI)                      |
 * |        |            |                                      | 任何操作（读/写）           |                        |                              |
 * +--------+------------+--------------------------------------+-----------------------------+------------------------+------------------------------+
 * | 001    | 3          | 发送保存寄存器为空                   | 发送保存寄存器为空          | 写数据到 THR 或读 IIR  | 发送保存寄存器为空中断使能   |
 * |        |            | (Transmitter holding register empty) |                             |                        | (ETBEI)                      |
 * +--------+------------+--------------------------------------+-----------------------------+------------------------+------------------------------+
 * | 000    | 4          | Modem 状态改变                       | MSR 寄存器改变              | 读 MSR                 | Modem 状态中断使能           |
 * |        |            | (Modem status interrupt)             |                             |                        | (EDSSI)                      |
 * +--------+------------+--------------------------------------+-----------------------------+------------------------+------------------------------+
 */
/*
 * FIFO 控制寄存器（FCR）
 * 
 * +-------+-----------+-------+--------+------------------------------------------------------+
 * | 位域  | 位域名称  | 位宽  | 访问   | 描述                                                |
 * +-------+-----------+-------+--------+------------------------------------------------------+
 * | 7:6   | TL        | 2     | 写     | 接收 FIFO 中断的发生阈值:                           |
 * |       |           |       |        | '00': 1 字节                                        |
 * |       |           |       |        | '01': 1/4满(QEMU: 4B)                               |
 * |       |           |       |        | '10': 1/2满(QEMU: 8B)                               |
 * |       |           |       |        | '11': 距满差 2 字节(QEMU: 14B)                      |
 * +-------+-----------+-------+--------+------------------------------------------------------+
 * | 5:3   | Reserved  | 3     | 写     | 保留                                                |
 * +-------+-----------+-------+--------+------------------------------------------------------+
 * | 2     | Txset     | 1     | 写     | 写 1 以清除发送 FIFO 的内容，复位其逻辑             |
 * +-------+-----------+-------+--------+------------------------------------------------------+
 * | 1     | Rxset     | 1     | 写     | 写 1 以清除接收 FIFO 的内容，复位其逻辑             |
 * +-------+-----------+-------+--------+------------------------------------------------------+
 * | 0     | FIFOE     | 1     | 写     | FIFO 使能位:                                        |
 * |       |           |       |        | '1': 开启 FIFO                                      |
 * |       |           |       |        | '0': 关闭 FIFO                                      |
 * |       |           |       |        | 改变此位会自动复位 FIFO                             |
 * +-------+-----------+-------+--------+------------------------------------------------------+
 */
#define IIR_FCR_OFFSET 0x02

#define IIR_INTP_OFFSET 0x00
#define IIR_INTP_MASK 0x01
#define IIR_IID_OFFSET 0x01
#define IIR_IID_MASK 0x07

#define IIR_INTP_NO_INTERRUPT_PENDING 1

#define IIR_IID_MODEM_STATUS 0
#define IIR_IID_TRANSMITTER_HOLDING_REGISTER_EMPTY 1
#define IIR_IID_RECEIVED_DATA_AVAILABLE 2
#define IIR_IID_LINE_STATUS 3
#define IIR_IID_CHARACTER_TIMEOUT 6

// Line Control Register
/*
 * 线路控制寄存器（LCR）
 * 
 * 这个寄存器主要控制寄存器访问与收发时数据帧的格式，包括校验、停止位与字符的长度。
 * 
 * +-----+-----------+------+--------+------------------------------------------------------+
 * |位域 | 位域名称  | 位宽 | 访问   | 描述                                                 |
 * +-----+-----------+------+--------+------------------------------------------------------+
 * | 7   | dlab      | 1    | 读/写  | 分频锁存器访问位, '1': 访问操作分频锁存器,            |
 * |     |           |      |        | '0': 访问操作正常寄存器                               |
 * +-----+-----------+------+--------+------------------------------------------------------+
 * | 6   | bcb       | 1    | 读/写  | 打断控制位, '1': 此时串口的输出被置为 0(打断状态),    |
 * |     |           |      |        | '0': 正常操作                                        |
 * +-----+-----------+------+--------+------------------------------------------------------+
 * | 5   | spb       | 1    | 读/写  | 指定奇偶校验位, '0': 正常奇偶校验,                    |
 * |     |           |      |        | '1': 校验位恒为 LCR[4] 取反                          |
 * +-----+-----------+------+--------+------------------------------------------------------+
 * | 4   | eps       | 1    | 读/写  | 奇偶校验位选择, '0': 奇校验, '1': 偶校验              |
 * +-----+-----------+------+--------+------------------------------------------------------+
 * | 3   | pe        | 1    | 读/写  | 奇偶校验位使能, '0': 没有奇偶校验位,                 |
 * |     |           |      |        | '1': 在发送时生成奇偶校验位，接收时检查奇偶校验位     |
 * +-----+-----------+------+--------+------------------------------------------------------+
 * | 2   | sb        | 1    | 读/写  | 停止位的位数, '0': 1 个停止位,                        |
 * |     |           |      |        | '1': 在 5 位字符长度时是 1.5 个停止位，其他长度是 2 个|
 * +-----+-----------+------+--------+------------------------------------------------------+
 * | 1:0 | bec       | 2    | 读/写  | 设定每个字符的位数, '00': 5 位, '01': 6 位,          |
 * |     |           |      |        | '10': 7 位, '11': 8 位                               |
 * +-----+-----------+------+--------+------------------------------------------------------+
 */
#define LCR 0x03

// Modem Control Register
#define MCR 0x04

// Line Status Register
/*
线路状态寄存器（LSR）
+------+------------+------+------+--------------------------------------------------------------------------------+
| 位域 | 位域名称   | 位宽 | 访问 | 描述                                                                           |
+------+------------+------+------+--------------------------------------------------------------------------------+
| 7    | ERROR      | 1    | R    | 错误表示位, '1': 至少有奇偶校验位错误，帧错误或打断中断的一个, '0': 没有错误       |
| 6    | TE         | 1    | R    | 发送为空且线路空闲表示位, '1': 发送寄存器/FIFO 和发送移位寄存器都为空, '0': 有数据 |
| 5    | THRE       | 1    | R    | 发送寄存器/FIFO 为空表示位, '1': 当前发送寄存器/FIFO 为空, '0': 有数据            |
| 4    | BI         | 1    | R    | 打断中断表示位, '1': 接收到起始位＋数据＋奇偶位＋停止位都是0，即有打断中断, '0': 无|
| 3    | FE         | 1    | R    | 帧错误表示位, '1': 接收的数据没有停止位, '0': 无错误, 读取LSR后自动清空           |
| 2    | PE         | 1    | R    | 奇偶校验位错误表示位, '1': 当前接收数据有奇偶错误, '0': 无奇偶错误, 读取LSR后清空 |
| 1    | OE         | 1    | R    | 数据溢出表示位, '1': 有数据溢出, '0': 无溢出, 读取LSR寄存器后自动清空             |
| 0    | DR         | 1    | R    | 接收数据有效表示位, '0': 在FIFO中无数据, '1': 在FIFO中有数据                     |
+------+------------+------+------+--------------------------------------------------------------------------------+
*/
#define LSR 0x05

#define LSR_DR 0x01
#define LSR_THRE (1 << 5)

// Modem Status Register
/*
调制解调器状态寄存器（MSR）

MSR（调制解调器状态寄存器）包含设备上四个传入调制解调器控制线的状态信息。该信息分为两个半字节（nibble）：高四位表示输入的当前状态，低四位用于指示状态变化。每次读取该寄存器时，四个最低有效位（LSB）将被复位。
+------+---------------------+------+------+--------------------------------------------------------------------------------+
| 位域 | 位域名称            | 位宽 | 访问 | 描述                                                                           |
+------+---------------------+------+------+--------------------------------------------------------------------------------+
| 7    | Carrier detect      | 1    | R    | 载波检测当前状态, '1': 检测到载波, '0': 未检测到载波                            |
| 6    | Ring indicator      | 1    | R    | 振铃指示当前状态, '1': 检测到振铃信号, '0': 无振铃信号                          |
| 5    | Data set ready      | 1    | R    | 数据设备就绪当前状态, '1': 设备就绪, '0': 设备未就绪                            |
| 4    | Clear to send       | 1    | R    | 清除发送当前状态, '1': 允许发送, '0': 不允许发送                                |
| 3    | change in Carrier detect | 1 | R    | 载波检测状态变化标志, '1': 自上次读取后状态发生变化, '0': 无变化（读取后清零）  |
| 2    | trailing edge Ring indicator | 1 | R | 振铃信号后沿触发标志, '1': 检测到振铃信号下降沿（读取后清零）                   |
| 1    | change in Data set ready | 1 | R    | 数据设备就绪状态变化标志, '1': 自上次读取后状态发生变化, '0': 无变化（读取后清零）|
| 0    | change in Clear to send | 1 | R    | 清除发送状态变化标志, '1': 自上次读取后状态发生变化, '0': 无变化（读取后清零）   |
+------+---------------------+------+------+--------------------------------------------------------------------------------+
*/
#define MSR 0x06

// clang-format on

#endif