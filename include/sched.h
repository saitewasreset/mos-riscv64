#ifndef __SCHED_H__
#define __SCHED_H__

/*
 * 概述：
 *   实现时间片轮转调度算法，从可运行环境列表中选择一个环境并使用'env_run'调度运行。
 *
 *   当需要切换进程时（如主动让出、时间片耗尽、当前进程不可运行等），从调度队列头部
 * 选取新进程，设置其优先级对应的时间片。若原进程仍可运行，将其移至队列尾部以保证
 * 公平性。非可运行进程的移除由其他函数保证。
 *
 *   当无需切换进程时（时间片未用完、未让出、仍可运行），继续运行当前进程，并
 * 减少其可运行的时间片。
 *
 *   **不要在本函数中修改`curenv`的值，其值应当通过`env_run`函数修改**
 *
 * Precondition：
 * - 全局变量'env_sched_list'仅包含且必须包含所有ENV_RUNNABLE状态的进程
 * - 全局变量'curenv'在首次调度前应为NULL
 * - 非可运行进程的移除由其他函数维护（如env_destroy/env_block等）
 *
 * Postcondition：
 * - 若yield非零，当前进程不会（在当前轮次）被再次调度（除非是唯一可运行进程）
 * - 调度队列中所有进程保持ENV_RUNNABLE状态（需由其他函数维护）
 * - 新调度进程的时间片计数被初始化为其优先级值减1，其将可以运行“优先级”次
 *
 * 副作用：
 * - 修改静态变量count（当前进程剩余时间片）
 * - 修改全局变量curenv（通过env_run）
 * - 可能调整env_sched_list队列结构（移动可运行进程至队尾）
 */
void schedule(int yield) __attribute__((noreturn));

#endif /* __SCHED_H__ */
